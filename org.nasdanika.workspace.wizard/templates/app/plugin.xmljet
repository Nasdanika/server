<%@ jet package="org.nasdanika.workspace.wizard.render.app" class="ApplicationPluginRenderer" skeleton="../Renderer.skeleton" %>
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <% if (wizard.getRoutingServletAlias()!=null || wizard.getSessionServletAlias()!=null) { %>
   <extension point="org.eclipse.equinox.http.registry.servlets">
   
   	<% if (wizard.getRoutingServletAlias()!=null) { %>
      <servlet
            alias="<%=wizard.getRoutingServletAlias()%>"
            class="org.nasdanika.cdo.web.CDOTransactionRoutingServlet"
            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
         <init-param
               name="json-pretty-print"
               value="true">
         </init-param>
         <init-param
               name="default-access-decision"
               value="allow">
         </init-param>
         <init-param
               name="ws-session-path"
               value="<%=wizard.getSessionServletAlias()%>">
         </init-param>
      </servlet>
      <!-- NTLM Authentication 
      <servlet
            alias="/ntlm<%=wizard.getRoutingServletAlias()%>"
            class="org.nasdanika.cdo.web.CDOTransactionRoutingServlet"
            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
         <init-param
               name="json-pretty-print"
               value="true">
         </init-param>
         <init-param
               name="default-access-decision"
               value="allow">
         </init-param>
         <init-param
               name="ws-session-path"
               value="/ntlm<%=wizard.getSessionServletAlias()%>">
         </init-param>
      </servlet>
	   	<% if (wizard.getSessionServletAlias()!=null) { %>
	      <servlet
	            alias="<%=wizard.getSessionServletAlias()%>"
	            class="org.nasdanika.cdo.web.SessionWebSocketServlet"
	            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
	         <init-param
	               name="view-path"
	               value="/ntlm<%=wizard.getRoutingServletAlias()%>">
	         </init-param>
	      </servlet>
		<% } %>   
      -->
      <% } %>
   	<% if (wizard.getSessionServletAlias()!=null) { %>
      <servlet
            alias="<%=wizard.getSessionServletAlias()%>"
            class="org.nasdanika.cdo.web.SessionWebSocketServlet"
            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
         <init-param
               name="view-path"
               value="<%=wizard.getRoutingServletAlias()%>">
         </init-param>
      </servlet>
	<% } %>   
   </extension>
   <% } %>
   
	<% if (wizard.getRoutingServletAlias()!=null) { %>
   <extension point="org.nasdanika.web.route">
      <root_route
            class="<%=wizard.getApplicationArtifactId()%>.<%=wizard.getJavaName()%>Route"
            method="GET"
            pattern="<%=wizard.getDashedName()%>\.html">
      </root_route>
      
      <% if (wizard.getDocAppRoutePattern()!=null) { %>
      <root_route
            class="<%=wizard.getApplicationArtifactId()%>.<%=wizard.getJavaName()%>DocAppRoute"
            method="GET"
            pattern="<%=wizard.getDocAppRoutePattern()%>">
      </root_route>
      <% } %>
      
      <!--
      <object_route
            class="org.nasdanika.web.routes.ServiceRoute"
            method="*"
            pattern="[^/]+/services/.+"
            target="org.eclipse.emf.cdo.view.CDOView">
         <property
               name="offset"
               value="2">
         </property>
      </object_route>
      -->
   </extension>
   <% } %>
   
   <% if (wizard.getWebContentAlias()!=null) { %>
   <extension
         point="org.eclipse.equinox.http.registry.resources">
      <resource
            alias="<%=wizard.getWebContentAlias()%>"
            base-name="<%=wizard.getWebContentBaseName()%>">
      </resource>
   </extension>
   <% } %>
      
   <% if (wizard.getWebContentAlias()!=null && wizard.getRoutingServletAlias()!=null) { %>
   <extension point="org.nasdanika.web.html_factory">
      <default_html_factory
            bootstrapCssContainer="<%=wizard.getWebContentAlias()%>bootstrap/css">
            <script>
               <%=wizard.getWebContentAlias()%>js/jquery-1.11.3.min.js
            </script>
            <script>
               <%=wizard.getWebContentAlias()%>js/underscore-min.js
            </script>
            <script><%=wizard.getWebContentAlias()%>js/backbone-min.js</script>
            <script><%=wizard.getWebContentAlias()%>bootstrap/js/bootstrap.min.js</script>
            <script><%=wizard.getWebContentAlias()%>js/knockout-3.3.0.js</script>
            <script>
               <%=wizard.getWebContentAlias()%>js/require.js
            </script>            
            <script>
               <%=wizard.getWebContentAlias()%>js/require-config.js
            </script>
            <stylesheet>
               <%=wizard.getWebContentAlias()%>font-awesome-4.4.0/css/font-awesome.min.css
            </stylesheet>      
            <script>
               <%=wizard.getWebContentAlias()%>js/lightbox.min.js
            </script>
            <stylesheet>
               <%=wizard.getWebContentAlias()%>css/lightbox.css
            </stylesheet>                  
      </default_html_factory>
   </extension>
   <% } %>
   <extension point="org.nasdanika.cdo.security.security_policy">
      <policy_resource
            resource="<%=wizard.getDashedName()%>.nasdanika_cdo_security">
      </policy_resource>
   </extension>
   <% if (wizard.getHttpContextId()!=null) { %> 
   <extension
         point="org.eclipse.equinox.http.registry.httpcontexts">
      <httpcontext
            id="<%=wizard.getHttpContextId()%>">
      </httpcontext>
   </extension>   
   <% } %>
   <% if (wizard.getDocRoutePath()!=null) { %>
   <extension
         point="org.nasdanika.cdo.web.doc.extensions">
       <wiki-link-resolver
            class="org.nasdanika.cdo.web.doc.extensions.JavadocWikiLinkResolver"
            name="javadoc">
         <property
		        name="packageMap.org.nasdanika.*"
                value="http://www.nasdanika.org/server/apidocs/">
         </property>
         <property
               name="packageMap.java.*"
               value="http://docs.oracle.com/javase/8/docs/api">
         </property>
         <property
               name="packageMap.javax.*"
               value="http://docs.oracle.com/javase/8/docs/api">
         </property>
         <description>
            Resolves JavaDoc URL from the class/package name. Usage: ``[[javadoc&gt;fully qualified class name|text]]``. Text is optional. Examples: 

* ``[[javadoc&gt;java.lang.String]]`` is rendered as [[javadoc&gt;java.lang.String]]
* ``[[javadoc&gt;java.lang.String|java.lang.String]]`` is rendered as [[javadoc&gt;java.lang.String|java.lang.String]]
         </description>
      </wiki-link-resolver>
   </extension>
   <% } %>
</plugin>
