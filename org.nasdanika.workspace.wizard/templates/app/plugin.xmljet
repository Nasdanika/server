<%@ jet package="org.nasdanika.workspace.wizard.render.app" class="ApplicationPluginRenderer" skeleton="../Renderer.skeleton" %>
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <% if (wizard.getRoutingServletAlias()!=null || wizard.getSessionServletAlias()!=null) { %>
   <extension point="org.eclipse.equinox.http.registry.servlets">
   
   	<% if (wizard.getRoutingServletAlias()!=null) { %>
      <servlet
            alias="<%=wizard.getRoutingServletAlias()%>"
            class="org.nasdanika.cdo.web.CDOTransactionRoutingServlet"
            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
         <init-param
               name="json-pretty-print"
               value="true">
         </init-param>
         <init-param
               name="default-access-decision"
               value="allow">
         </init-param>
         <init-param
               name="ws-session-path"
               value="<%=wizard.getSessionServletAlias()%>">
         </init-param>
      </servlet>
      <!-- NTLM Authentication 
      <servlet
            alias="/ntlm<%=wizard.getRoutingServletAlias()%>"
            class="org.nasdanika.cdo.web.CDOTransactionRoutingServlet"
            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
         <init-param
               name="json-pretty-print"
               value="true">
         </init-param>
         <init-param
               name="default-access-decision"
               value="allow">
         </init-param>
         <init-param
               name="ws-session-path"
               value="/ntlm<%=wizard.getSessionServletAlias()%>">
         </init-param>
      </servlet>
	   	<% if (wizard.getSessionServletAlias()!=null) { %>
	      <servlet
	            alias="<%=wizard.getSessionServletAlias()%>"
	            class="org.nasdanika.cdo.web.SessionWebSocketServlet"
	            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
	         <init-param
	               name="view-path"
	               value="/ntlm<%=wizard.getRoutingServletAlias()%>">
	         </init-param>
	      </servlet>
		<% } %>   
      -->
      <% } %>
   	<% if (wizard.getSessionServletAlias()!=null) { %>
      <servlet
            alias="<%=wizard.getSessionServletAlias()%>"
            class="org.nasdanika.cdo.web.SessionWebSocketServlet"
            <% if (wizard.getHttpContextId()!=null) { %> httpcontextId="<%=wizard.getHttpContextId()%>"<% } %>>
         <init-param
               name="view-path"
               value="<%=wizard.getRoutingServletAlias()%>">
         </init-param>
      </servlet>
	<% } %>   
   </extension>
   <% } %>
   
	<% if (wizard.getRoutingServletAlias()!=null) { %>
   <extension point="org.nasdanika.web.route">
      <root_route
            class="<%=wizard.getApplicationArtifactId()%>.<%=wizard.getJavaName()%>Route"
            method="GET"
            pattern="<%=wizard.getDashedName()%>\.html">
      </root_route>
      
      <% if (wizard.getDocAppRoutePattern()!=null) { %>
      <root_route
            class="<%=wizard.getApplicationArtifactId()%>.<%=wizard.getJavaName()%>DocAppRoute"
            method="GET"
            pattern="<%=wizard.getDocAppRoutePattern()%>">
      </root_route>
      <% } %>
      
      <!--
      <object_route
            class="org.nasdanika.web.routes.ServiceRoute"
            method="*"
            pattern="[^/]+/services/.+"
            target="org.eclipse.emf.cdo.view.CDOView">
         <property
               name="offset"
               value="2">
         </property>
      </object_route>
      -->
   </extension>
   <% } %>
   
   <% if (wizard.getWebContentAlias()!=null) { %>
   <extension
         point="org.eclipse.equinox.http.registry.resources">
      <resource
            alias="<%=wizard.getWebContentAlias()%>"
            base-name="<%=wizard.getWebContentBaseName()%>">
      </resource>
   </extension>
   <% } %>
      
   <% if (wizard.getWebContentAlias()!=null && wizard.getRoutingServletAlias()!=null) { %>
   <extension point="org.nasdanika.web.html_factory">
      <default_html_factory
            bootstrapCssContainer="<%=wizard.getWebContentAlias()%>bootstrap/css">
            <script>
               <%=wizard.getWebContentAlias()%>js/jquery-1.11.3.min.js
            </script>
            <script>
               <%=wizard.getWebContentAlias()%>js/underscore-min.js
            </script>
            <script><%=wizard.getWebContentAlias()%>js/backbone-min.js</script>
            <script><%=wizard.getWebContentAlias()%>bootstrap/js/bootstrap.min.js</script>
            <script><%=wizard.getWebContentAlias()%>js/knockout-3.3.0.js</script>
            <script>
               <%=wizard.getWebContentAlias()%>js/require.js
            </script>            
            <script>
               <%=wizard.getWebContentAlias()%>js/require-config.js
            </script>
            <stylesheet>
               <%=wizard.getWebContentAlias()%>font-awesome-4.4.0/css/font-awesome.min.css
            </stylesheet>      
            <script>
               <%=wizard.getWebContentAlias()%>js/lightbox.min.js
            </script>
            <stylesheet>
               <%=wizard.getWebContentAlias()%>css/lightbox.css
            </stylesheet>                  
      </default_html_factory>
   </extension>
   <% } %>
   <extension point="org.nasdanika.cdo.security.security_policy">
      <policy_resource
            resource="<%=wizard.getDashedName()%>.nasdanika_cdo_security">
      </policy_resource>
   </extension>
   <% if (wizard.getHttpContextId()!=null) { %> 
   <extension
         point="org.eclipse.equinox.http.registry.httpcontexts">
      <httpcontext
            id="<%=wizard.getHttpContextId()%>">
      </httpcontext>
   </extension>   
   <% } %>
   <% if (wizard.getDocRoutePath()!=null) { %>
   <extension
         point="org.nasdanika.cdo.web.doc.extensions">
      <wiki-link-renderer
            class="org.nasdanika.cdo.web.doc.extensions.LightboxWikiLinkRenderer"
            name="image">
         <description><![CDATA[
            Renders a [lightbox](http://lokeshdhakar.com/projects/lightbox2/) image link. 

Example:

* ``[[image:https://github.com/Nasdanika/server/wiki/webtest.png]]`` is rendered as [[image:https://github.com/Nasdanika/server/wiki/webtest.png]]
         ]]></description>
      </wiki-link-renderer>
      <plugin
            class="org.nasdanika.cdo.web.doc.extensions.IncludePlugin"
            name="include">
         <description>
Includes content of another documentation resource into this resource.
 
Format ``{\{include>resource location}}``. Resource location URL supports custom schemes corresponding to the names of registered wiki link resolvers, e.g. ``bundle`` schema.

Curly brackets and greater signs can be escaped by prepending them with backslash. The opening tag shall be escaped by placing the backslash between the first and the second opening
curly brackets.
         </description>
      </plugin>
      
      <wiki-link-resolver
            class="org.nasdanika.cdo.web.doc.extensions.WikipediaResolver"
            name="wp">
            <description><![CDATA[
            Resolves Wikipedia URL from the article name, renders wikipedia icon before the link. Replaces spaces with underscores in the article name. Format: ``[[wp>article name|text]]``. Example: ``[[wp>Domain-driven design]]`` is rendered as [[wp>Domain-driven design]].
            ]]></description>
      </wiki-link-resolver>
         
       <wiki-link-resolver
            class="org.nasdanika.cdo.web.doc.extensions.JavadocWikiLinkResolver"
            name="javadoc">
         <property
         		name="packageMap.org.nasdanika.cdo.boxing"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.boxing/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.function"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.function/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.h2"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.h2/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.promise"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.promise/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.sca"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.sca/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.sca.edit"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.sca.edit/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.scheduler"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.scheduler/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.security"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.security/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.security.edit"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.security.edit/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.security.editor"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.security.editor/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.web"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.web/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo.web.doc"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo.web.doc/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.cdo"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.cdo/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.core"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.core/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.core.tests"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.core.tests/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.function.cdo"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.function.cdo/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.function"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.function/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.html"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.html/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.sca.design"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.sca.design/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.sca.edit"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.sca.edit/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.sca.editor"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.sca.editor/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.sca"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.sca/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.tools.design"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.tools.design/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.web"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.web/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.webtest.performance"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.webtest.performance/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.webtest"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.webtest/target/site/apidocs">
         </property>

         <property
         		name="packageMap.org.nasdanika.workspace.wizard"
         		value="http://www.nasdanika.org/server/apidocs/org.nasdanika.workspace.wizard/target/site/apidocs">
         </property>

         <property
               name="packageMap.java"
               value="http://docs.oracle.com/javase/8/docs/api">
         </property>
         
         <property
               name="packageMap.javax"
               value="http://docs.oracle.com/javase/8/docs/api">
         </property>
         <description>
            Resolves JavaDoc URL from the class/package name. Usage: ``[[javadoc&gt;fully qualified class name|text]]``. Text is optional. Examples: 

* ``[[javadoc&gt;java.lang.String]]`` is rendered as [[javadoc&gt;java.lang.String]]
* ``[[javadoc&gt;java.lang.String|java.lang.String]]`` is rendered as [[javadoc&gt;java.lang.String|java.lang.String]]
         </description>
      </wiki-link-resolver>
      <markdown-pre-processor class="org.nasdanika.cdo.web.doc.extensions.PlantUmlMarkdownPreProcessor">
         <description>
             Generates UML diagrams from [PlantUML](http://plant) specifications enclosed between ``@startuml`` and ``@enduml`` tags. @startuml and @enduml tags shall be at the beginning of the line and be the only text on the line except whitespaces. @startuml shall be preceded by a blank line and @enduml shall be followed by a blank line. [GraphWiz](http://www.graphviz.org/) is required to render diagrams other than sequence diagrams. See PlantUML site for details.

Example:
```
@startuml
A -> B : Message
@enduml
```
is rendered as 

@startuml
A -> B : Message
@enduml
         </description>
      </markdown-pre-processor>      
   </extension>
   <% } %>
</plugin>
