<%@ jet package="org.nasdanika.cdo.web.routes" class="CDOObjectModuleEagerObjectSetDeltaGenerator" skeleton="Generator.skeleton"%>
<%
	org.nasdanika.web.WebContext context = (org.nasdanika.web.WebContext) args[0];
	org.eclipse.emf.cdo.CDOObject cdoObject = (org.eclipse.emf.cdo.CDOObject) args[1]; 
	org.eclipse.emf.ecore.EReference ref = (org.eclipse.emf.ecore.EReference) args[2]; 
%>
// Eager object load strategy - returns an array of functions returning objects
if (delta.hasOwnProperty('<%=ref.getName()%>')) { 
	data.<%=ref.getName()%> = delta.<%=ref.getName()%>;
	<% if (ref.isMany()) { %>
		for (ref in data.<%=ref.getName()%>.initialValue) {
			deltaPromises.push(Q.Promise(function(modName,resolve,reject,notify) {
					require([modName], function(mod) {
						resolve(mod);
					});					
				}.bind(this, data.<%=ref.getName()%>.initialValue[ref]+'.js')));
		}
	<% } else { %>
		deltaPromises.push(Q.Promise(function(modName,resolve,reject,notify) {
				require([modName], function(mod) {
					resolve(mod);
				});					
			}.bind(this, data.<%=ref.getName()%>.initialValue+'.js')));
	<% } %>	 
}
