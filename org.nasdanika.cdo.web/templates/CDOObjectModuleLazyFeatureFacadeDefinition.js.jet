<%@ jet package="org.nasdanika.cdo.web.routes" class="CDOObjectModuleLazyFeatureFacadeDefinitionGenerator" skeleton="Generator.skeleton"%>
<%
	org.nasdanika.web.HttpServletRequestContext context = (org.nasdanika.web.HttpServletRequestContext) args[0];
	org.eclipse.emf.cdo.CDOObject cdoObject = (org.eclipse.emf.cdo.CDOObject) args[1]; 
	org.eclipse.emf.ecore.EStructuralFeature feature = (org.eclipse.emf.ecore.EStructuralFeature) args[2]; 
%>
// Lazy object load strategy - returns a promise for an array of objects
get <%=feature.getName()%>() {
	if (!data.<%=feature.getName()%>.hasOwnProperty('value')) {
		data.<%=feature.getName()%>.value = session.apply("<%=context.getObjectPath(cdoObject)%>", undefined, undefined, "<%=feature.getName()%>");
		data.<%=feature.getName()%>.value.then(function (val) {
			var mf = function(v) {
				if (v.hasOwnProperty("$path")) {
					return v.$path;
				}
				return typeof v === "function" ? v() : v;
			};
			
			if (Array.isArray(val)) {
				data.<%=feature.getName()%>.initialValue = val.map(mf);
			} else {
				data.<%=feature.getName()%>.initialValue = mf(val);
			}
		});
	}
	return data.<%=feature.getName()%>.value;
}<% if (feature.isChangeable() && context.authorize(cdoObject, "write", feature.getName(), null)) { %>,
set <%=feature.getName()%>(newValue) {
	data.<%=feature.getName()%>.value = newValue;
}<% } %>

