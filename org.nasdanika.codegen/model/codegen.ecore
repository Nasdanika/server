<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="codegen" nsURI="urn:org.nasdanika.codegen" nsPrefix="org.nasdanika.codegen">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="Code generation model."/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Configuration">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Container of configuration items - properties and services.&#xD;&#xA;"/>
    </eAnnotations>
    <eOperations name="createContext" eType="#//Context" eExceptions="#//Exception">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Creates ``org.nasdanika.codegen.Context`` which provides access to properties and services."/>
      </eAnnotations>
      <eParameters name="parent" eType="#//Context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Parent context."/>
        </eAnnotations>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="includes" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="URL's of configuration files to load into the this configurable's context.&#xD;&#xA;URL's are resolved relative to the ``baseURL``, which in turn is resolved relative to the model resource. &#xD;&#xA;&#xD;&#xA;The following custom schemes supported:&#xD;&#xA;&#xD;&#xA;* ``bundle`` - ``bundle:&lt;bundle symbolic name>/&lt;resource path in the bundle>``&#xD;&#xA;* ``java`` - ``java:&lt;classloader path>``&#xD;&#xA;&#xD;&#xA;Configuration files can be in the following formats:&#xD;&#xA;&#xD;&#xA;* XMI model - ``.xml`` or ``.nsdgen`` extension.&#xD;&#xA;* Properties file - ``.properties`` extension.&#xD;&#xA;* JSON file following the structure of the configuration model - ``.json`` extension.&#xD;&#xA;* YAML file following the structure of the configuration model - ``.yml`` extension.&#xD;&#xA;&#xD;&#xA;If XML/JSON/YAML contains configuration definition, then its ``createContext()`` method is invoked in sequence&#xD;&#xA;to create a chain of contexts. If property or service is contained in the definition, it gets mounted to a context created by this configuration."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="configuration" upperBound="-1"
        eType="#//ConfigurationItem" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Configuration items - properties and services."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="defaultIncludes" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Same as ``includes``, but default includes are used only if the parent context doesn't contain configuration items with requested keys (names or types)."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="baseURL" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base URL to resolve includes, default includes, and classpath entries. &#xD;&#xA;The URL is resolved relative to the model location and defaults to the model location URL."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="classPath" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Class path for loading classes of configuration elements."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="include" upperBound="-1"
        eType="#//Configuration">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Configurations defined elsewhere to be included into this configuration. &#xD;&#xA;Configurations get chained and configuration items (properties and services) get&#xD;&#xA;mounted to the context created by this configuration."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConfigurationItem" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Configuration item contributes to the context of Configurable&#xD;&#xA;and can itself be configurable.&#xD;&#xA;&#xD;&#xA;Configuration item can be configured with value or other configuration items. &#xD;&#xA;Value and configuration items are injected into the configuration item via constructor. An appropriate constructor is selected based on &#xD;&#xA;whether the value is blank and configuration items are present:&#xD;&#xA;&#xD;&#xA;* Blank value, no configuration items - default constructor, if exists.&#xD;&#xA;* Non-blank value, no configuration items - a constructor which takes String, if exists.&#xD;&#xA;* Blank value, configuration items - a constructor which takes Context, if exists.&#xD;&#xA;* Otherwise - a constructor which takes String and Context in any order.&#xD;&#xA;&#xD;&#xA;If configuration item's type is assignable from ``org.nasdanika.codegen.Provider``, then it gets instantiated using&#xD;&#xA;either the default constructor, if it exists and value is blank, or a constructor which takes String. The provider's ``get(Context)`` method is used&#xD;&#xA;to obtain actual configuration item.&#xD;&#xA;&#xD;&#xA;If value is not blank, it is interpolated using properties already defined in the context and inherited from the parent context. &#xD;&#xA;Interpolation is the process of expanding tokens enclosed into double-curly brackets to the values of properties with corresponding names.&#xD;&#xA;&#xD;&#xA;If a property with a given name is not defined, a token does not get expanded.&#xD;&#xA;&#xD;&#xA;Example:&#xD;&#xA;```&#xD;&#xA;{{base-package}}.impl&#xD;&#xA;```"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Configuration item value type. Defaults to ``java.lang.String``."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Configuration item value."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Regular configuration shadow/override configuration items defined in parent context(s),&#xD;&#xA;default configuration items, on the contrary, get shadowed by parent's configuration items&#xD;&#xA;with the same keys."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional description."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Provider">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
    </eGenericSuperTypes>
    <eGenericSuperTypes eClassifier="#//Configuration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Service" eSuperTypes="#//ConfigurationItem">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Service is a configuration item keyed by its type or one of types it implements/extends.&#xD;&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="serviceType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Service type. Shall be a superclass or implemented interface of the value type.&#xD;&#xA;Defaults to value type."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="#//ConfigurationItem">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Property is a configuration item keyed by a String."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Property name."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WorkFactory" instanceClassName="org.nasdanika.codegen.WorkFactory"
      abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Work factory creates work to be executed during generation."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Context" instanceClassName="org.nasdanika.codegen.Context">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Context provides access to properties and services. Contexts are typically chained&#xD;&#xA;with a child context &quot;inheriting&quot; properties and services of the parent context(s)."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Generator" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generator is the base class for model element performing code generation."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eOperations name="validate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Validates element for execution/generation. Adds messages to diagnostics and "/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Diagnostics to add validation messages to."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Validation context."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="iterator" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Iterator attribute may contain a fragment of Java code which controls&#xD;&#xA;how many times the generator will be invoked and can modify generator's &#xD;&#xA;context for each invocation.&#xD;&#xA;&#xD;&#xA;The iterator's code shall be a Java method body as shown below:&#xD;&#xA;&#xD;&#xA;```java&#xD;&#xA;&lt;T extends Generator> Object iterate(Context context, T generator) throws Exception {&#xD;&#xA;    // --- Iterator code here ---&#xD;&#xA;}&#xD;&#xA;```&#xD;&#xA;&#xD;&#xA;where ``T`` is the type of the iterator declaring generator model element. &#xD;&#xA;&#xD;&#xA;Iterator code may return one of the following:&#xD;&#xA;&#xD;&#xA;* ``null`` or ``false`` or empty collection - no iteration.&#xD;&#xA;* ``java.lang.Iterable`` with elements of type ``org.nasdanika.codegen.Context`` or an array containing ``Context`` elements - generator will be invoked for each element of array/iterable and the element will be passed to the generator as its context.&#xD;&#xA;* ``Context`` - single invocation with returned context.&#xD;&#xA;&#xD;&#xA;If the iterator returns any other result, then the generator throws ``IllegalArgumentException``.&#xD;&#xA;&#xD;&#xA;Blank iterator code is equivalent to ``return context;``"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//WorkFactory">
      <eTypeArguments eClassifier="#//List">
        <eTypeArguments eTypeParameter="#//Generator/T"/>
      </eTypeArguments>
    </eGenericSuperTypes>
    <eGenericSuperTypes eClassifier="#//Configuration"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Group">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Group of generators from which zero to all can be invoked during the generation process."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="selector" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Java code to select which group elements shall be invoked and to customize their contexts. Selector code is a Java method body as shown below&#xD;&#xA;&#xD;&#xA;```java&#xD;&#xA;&lt;G extends Generator> Context select(Context context, G group, Generator element) throws Exception {&#xD;&#xA;    // --- Selector code here ---&#xD;&#xA;}&#xD;&#xA;```&#xD;&#xA;&#xD;&#xA;where ``G`` is the type of the selector declaring group model element and ``element`` is the group element being evaluated. &#xD;&#xA;&#xD;&#xA;If selector returns ``null`` then given group element is not invoked during generation. Otherwise it is invoked with the returned context.&#xD;&#xA;&#xD;&#xA;Blank selector code is equivalent to ``return context;``"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Group elements."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eTypeParameter="#//Group/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//Group/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGenerator" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="ResourceGenerator generates a workspace resource - file or directory. "/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//ResourceGenerator/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Workspace">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Workspace is a group of projects."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Group">
      <eTypeArguments eClassifier="#//IProject"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Folder">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates IFolder."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Folder can contain other resource generators."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Resource">
        <eTypeArguments eClassifier="#//IResource"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IFolder"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Nature" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates project nature, e.g. Java or Maven nature."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="#//IProjectNature"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="File" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates IFile."/>
    </eAnnotations>
    <eTypeParameters name="C"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="merger" eType="#//Service"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If reconcile action is ``Merge`` then merger gets instantiated to merge existing and new&#xD;&#xA;content of the file. The merger class shall implement ``org.nasdanika.codegen.Merger&lt;T>`` &#xD;&#xA;where ``T`` is ``String` for text files and ``InputStream`` for binary files."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generator" lowerBound="1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="File content generator."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eTypeParameter="#//File/C"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IFile"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="InputStream" instanceClassName="java.io.InputStream"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Void" instanceClassName="java.lang.Void"/>
  <eClassifiers xsi:type="ecore:EClass" name="Project">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates workspace project."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Project name. The name is interpolated &#xD;&#xA;during generation and as such may contain tokens to be expanded."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="natures" upperBound="-1"
        eType="#//Nature" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Project natures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resources" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Project resources."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Resource">
        <eTypeArguments eClassifier="#//IResource"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reconcileAction" eType="#//ReconcileAction"
        defaultValueLiteral="Append">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Action to take if a project with given name already exists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//ResourceGenerator">
      <eTypeArguments eClassifier="#//IProject"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates project resource - file or directory."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Resource name. Interpolated. May be a path name, i.e. contain separators, e.g. ``mydir/myfile.txt``"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reconcileAction" eType="#//ReconcileAction"
        defaultValueLiteral="Append">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Action to take if resource with given name already exists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//ResourceGenerator">
      <eTypeArguments eTypeParameter="#//Resource/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryFile">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Binary file, with ``InputStream`` content."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//File">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextFile">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Text file with ``String`` content."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//File">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="IFile" instanceClassName="org.eclipse.core.resources.IFile"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IFolder" instanceClassName="org.eclipse.core.resources.IFolder"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IProject" instanceClassName="org.eclipse.core.resources.IProject"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IProjectNature" instanceClassName="org.eclipse.core.resources.IProjectNature"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IWorkspaceRoot" instanceClassName="org.eclipse.core.resources.IWorkspaceRoot"/>
  <eClassifiers xsi:type="ecore:EEnum" name="ReconcileAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines an action to take if project/resource with a given name already exists in the workspace."/>
    </eAnnotations>
    <eLiterals name="Keep" literal="Keep">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Discard the generated content and keep the original or skip the generation step altogether."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Append" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Append the new content to the existing. For project and directories it means&#xD;&#xA;adding new resources next to the existing, which is semantically equivalent to merging."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Merge" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Merge new and existing content, typically using a merger service for files. &#xD;&#xA;For projects and directories merge is equivalent to append."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Overwrite" value="3">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Replace existing content with the new one. &#xD;&#xA;For directories and projects it means deleting the project/directory&#xD;&#xA;and re-creating with the new content.&#xD;&#xA;&#xD;&#xA;If the generation context contains ``overwrite-predicate`` property, then the value&#xD;&#xA;of the property is cast to ``java.util.function.Predicate`` and its ``test()`` method is invoked.&#xD;&#xA;If the return value is ``true`` then the resource/project get overwritten, if ``false`` it is left intact (same as ``Keep``).&#xD;&#xA;&#xD;&#xA;The predicate may throw ``org.eclipse.core.runtime.OperationCanceledException`` to cancel generation (same as ``Cancel``).&#xD;&#xA;&#xD;&#xA;Clients may create overwrite predicates which open an overwrite confirmation dialog to solicit overwrite decision from the user. "/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Cancel" value="4" literal="Cancel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Throw ``OperationCancelledException`` if resource/project already exists."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceReference">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a resource generator defined elsewhere."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference target."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Resource">
        <eTypeArguments eClassifier="#//IResource"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IResource"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StaticText">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Static text. Can be used as text file content or as input to interpolator or filter."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Text content."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentReference">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference (URL) to a content residing elsewhere, e.g. a template in a version control&#xD;&#xA;system available for download over HTTP."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ref" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Content location (URL)."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//ContentReference/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Filter" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Filter transforms input of a generator to produce output."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generator" lowerBound="1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator producing filter input."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eTypeParameter="#//Filter/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//Filter/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaGenerator" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This generator instantiates and invokes Java class to generate output. &#xD;&#xA;The generator Java class shall implement ``org.nasdanika.codegen.IGenerator``.&#xD;&#xA;&#xD;&#xA;For example, JET templates may use a skeleton like shown below:&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;```java&#xD;&#xA;public class CLASS implements org.nasdanika.codegen.IGenerator&lt;String> {&#xD;&#xA;&#xA;    &#xA;&#xA;public String generate(org.nasdanika.codegen.Context context, org.eclipse.core.runtime.IProgressMonitor monitor) throws Exception {&#xD;&#xA;        &#xA;return &quot;&quot;;&#xA;   &#xD;&#xA;    }&#xA; &#xD;&#xA;}&#xD;&#xA;```&#xD;&#xA;&#xD;&#xA;and classes compiled from these template can be used by the JavaGenerator."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="className" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator class name."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//JavaGenerator/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Interpolator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Interpolator produces output by expanding mustache tokens ``{{token}}`` in the &#xD;&#xA;input using context properties."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Filter">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JETEmitter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Invokes ``org.eclipse.emf.codegen.jet.JETEmitter`` to compile and evaluate a template."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="templateURI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Template location."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaFilter" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Instantiates a Java class to filter content. &#xD;&#xA;The filter Java class shall implement ``org.nasdanika.codegen.IFilter&lt;T>``, where&#xD;&#xA;``T`` is content type - ``String`` for text files and ``InputStream`` for binary files."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="className" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Filter class name."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Filter">
      <eTypeArguments eTypeParameter="#//JavaFilter/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Provider" instanceClassName="org.nasdanika.codegen.Provider"
      abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Providers are used to create configuration items using given context."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Exception" instanceClassName="java.lang.Exception"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IResource" instanceClassName="org.eclipse.core.resources.IResource"/>
  <eClassifiers xsi:type="ecore:EDataType" name="List" instanceClassName="java.util.List">
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Merger" instanceClassName="org.nasdanika.codegen.Merger">
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaTextFilter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``String`` binding of JavaFilter."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaFilter">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaStreamFilter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``InputStream`` binding of JavaFilter."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaFilter">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaTextGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``String`` binding of JavaGenerator."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaGenerator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaStreamGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``InputStream`` binding of JavaGenerator."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaGenerator">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eSubpackages name="java" nsURI="urn:org.nasdanika.codegen.java" nsPrefix="org.nasdanika.codegen.java">
    <eClassifiers xsi:type="ecore:EClass" name="JavaNature" eSuperTypes="#//Nature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Java nature."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="packagefragmentroots"
          upperBound="-1" eType="#//java/PackageFragmentRoot" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package fragments roots (source folders)."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="IJavaProject" instanceClassName="org.eclipse.jdt.core.IJavaProject"/>
    <eClassifiers xsi:type="ecore:EDataType" name="IPackageFragmentRoot" instanceClassName="org.eclipse.jdt.core.IPackageFragmentRoot"/>
    <eClassifiers xsi:type="ecore:EDataType" name="IPackageFragment" instanceClassName="org.eclipse.jdt.core.IPackageFragment"/>
    <eClassifiers xsi:type="ecore:EDataType" name="ICompilationUnit" instanceClassName="org.eclipse.jdt.core.ICompilationUnit"/>
    <eClassifiers xsi:type="ecore:EClass" name="PackageFragmentRoot">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Package fragment root (source folder)."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Folder name within the project. Interpolated and may be a path name, i.e. &#xD;&#xA;contain file separators, e.g. ``src/java``."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="packagefragments" upperBound="-1"
          eType="#//java/PackageFragment" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package fragments (packages)."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//java/IPackageFragmentRoot"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PackageFragment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Package fragment (package)."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package name, interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="compilationunits" upperBound="-1"
          eType="#//java/CompilationUnit" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package compilation units."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//java/IPackageFragment"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CompilationUnit" abstract="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Compilation unit."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Compilation unit name without ``.java`` extension. Interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="merge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If true, new and old compilation unit content gets merged with ``org.eclipse.emf.codegen.merge.java.JMerger``."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="format" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If true, generated/merged source is automatically formatted."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//java/ICompilationUnit"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="TextCompilationUnit" eSuperTypes="#//java/CompilationUnit">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Text compilation units uses a text generator to produce its content."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="generator" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generator to produce compilation unit content."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StructuredCompilationUnit" eSuperTypes="#//java/CompilationUnit">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Structured compilation unit assembles its content from import and type declarations.&#xD;&#xA;&#xD;&#xA;Work in progress..."/>
      </eAnnotations>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="maven" nsURI="urn:org.nasdanika.codegen.maven" nsPrefix="org.nasdanika.codegen.maven">
    <eClassifiers xsi:type="ecore:EClass" name="MavenNature" eSuperTypes="#//Nature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Maven nature."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="pomGenerator" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Optional generator of ``pom.xml`` file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
